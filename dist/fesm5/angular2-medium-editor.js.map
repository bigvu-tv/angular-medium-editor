{"version":3,"file":"angular2-medium-editor.js.map","sources":["ng://angular2-medium-editor/medium-editor.directive.ts","ng://angular2-medium-editor/medium-editor.module.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport * as MediumEditor from 'medium-editor';\n\n/**\n * Medium Editor wrapper directive.\n *\n * Examples\n * <medium-editor\n      [(editorModel)]=\"textVar\"\n *    [editorOptions]=\"{'toolbar': {'buttons': ['bold', 'italic', 'underline', 'h1', 'h2', 'h3']}}\"\n *    [editorPlaceholder]=\"placeholderVar\"></medium-editor>\n */\n@Directive({\n  selector: 'medium-editor'\n})\nexport class MediumEditorDirective implements OnInit, OnChanges, OnDestroy {\n\n  private lastViewModel: string;\n  private element: HTMLElement;\n  private editor: any;\n  private active: boolean;\n\n\t@Input('editorModel') model: any;\n  @Input('editorOptions') options: any;\n  @Input('editorPlaceholder') placeholder: string;\n\n  @Output('editorModelChange') update = new EventEmitter();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    this.element = this.el.nativeElement;\n    this.element.innerHTML = '<div class=\"me-editable\">' + this.model + '</div>';\n    this.active = true;\n\n    if (this.placeholder && this.placeholder.length) {\n      this.options.placeholder = {\n        text : this.placeholder\n      };\n    }\n\n    // Global MediumEditor\n    this.editor = new MediumEditor('.me-editable', this.options);\n    this.editor.subscribe('editableInput', (event, editable) => {\n      this.updateModel();\n    });\n  }\n\n  refreshView() {\n    if (this.editor) {\n      this.editor.setContent(this.model);\n    }\n  }\n\n  ngOnChanges(changes): void {\n    if (this.isPropertyUpdated(changes, this.lastViewModel)) {\n      this.lastViewModel = this.model;\n      this.refreshView();\n    }\n  }\n\n  /**\n   * Emit updated model\n   */\n  updateModel(): void {\n    let value = this.editor.getContent();\n    value = value.replace(/&nbsp;/g, '')\n                 .replace(/<p><br><\\/p>/g, '')\n                 .trim();\n    this.lastViewModel = value;\n    this.update.emit(value);\n  }\n\n  /**\n   * Remove MediumEditor on destruction of directive\n   */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model')) { return false; }\n\n    const change = changes.model;\n\n    if (change.isFirstChange()) {\n      return true;\n    }\n    return !Object.is(viewModel, change.currentValue);\n  }\n}\n","// import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core'\n\nimport { MediumEditorDirective } from './medium-editor.directive';\n\n@NgModule({\n  imports: [ ],\n  exports: [\n    MediumEditorDirective\n  ],\n  declarations: [\n    MediumEditorDirective\n  ],\n})\nexport class MediumEditorModule { }"],"names":[],"mappings":"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"}
