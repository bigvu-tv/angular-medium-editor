{"version":3,"file":"angular2-medium-editor.umd.js.map","sources":["ng://angular2-medium-editor/medium-editor.directive.ts","ng://angular2-medium-editor/medium-editor.module.ts"],"sourcesContent":["import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    Renderer,\r\n    ÉµlooseIdentical\r\n} from '@angular/core';\r\nimport * as MediumEditor from 'medium-editor';\r\n\r\n/**\r\n * Medium Editor wrapper directive.\r\n *\r\n * Examples\r\n * <medium-editor\r\n      [(editorModel)]=\"textVar\"\r\n *    [editorOptions]=\"{'toolbar': {'buttons': ['bold', 'italic', 'underline', 'h1', 'h2', 'h3']}}\"\r\n *    [editorPlaceholder]=\"placeholderVar\"></medium-editor>\r\n */\r\n@Directive({\r\n  selector: 'medium-editor'\r\n})\r\nexport class MediumEditorDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private lastViewModel: string;\r\n  private element: HTMLElement;\r\n  private editor: any;\r\n  private active: boolean;\r\n\r\n\t@Input('editorModel') model: any;\r\n  @Input('editorOptions') options: any;\r\n  @Input('editorPlaceholder') placeholder: string;\r\n\r\n  @Output('editorModelChange') update = new EventEmitter();\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.element = this.el.nativeElement;\r\n    this.element.innerHTML = '<div class=\"me-editable\">' + this.model + '</div>';\r\n    this.active = true;\r\n\r\n    if (this.placeholder && this.placeholder.length) {\r\n      this.options.placeholder = {\r\n        text : this.placeholder\r\n      };\r\n    }\r\n\r\n    // Global MediumEditor\r\n    this.editor = new MediumEditor('.me-editable', this.options);\r\n    this.editor.subscribe('editableInput', (event, editable) => {\r\n      this.updateModel();\r\n    });\r\n  }\r\n\r\n  refreshView() {\r\n    if (this.editor) {\r\n      this.editor.setContent(this.model);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes): void {\r\n    if (this.isPropertyUpdated(changes, this.lastViewModel)) {\r\n      this.lastViewModel = this.model;\r\n      this.refreshView();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit updated model\r\n   */\r\n  updateModel(): void {\r\n    let value = this.editor.getContent();\r\n    value = value.replace(/&nbsp;/g, '')\r\n                 .replace(/<p><br><\\/p>/g, '')\r\n                 .trim();\r\n    this.lastViewModel = value;\r\n    this.update.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Remove MediumEditor on destruction of directive\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.editor.destroy();\r\n  }\r\n\r\n  isPropertyUpdated(changes, viewModel) {\r\n    if (!changes.hasOwnProperty('model')) { return false; }\r\n\r\n    const change = changes.model;\r\n\r\n    if (change.isFirstChange()) {\r\n      return true;\r\n    }\r\n    return !ÉµlooseIdentical(viewModel, change.currentValue);\r\n  }\r\n}\r\n","// import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core'\r\n\r\nimport { MediumEditorDirective } from './medium-editor.directive';\r\n\r\n@NgModule({\r\n  imports: [ ],\r\n  exports: [\r\n    MediumEditorDirective\r\n  ],\r\n  declarations: [\r\n    MediumEditorDirective\r\n  ],\r\n})\r\nexport class MediumEditorModule { }"],"names":["EventEmitter","ɵlooseIdentical","Directive","ElementRef","Input","Output","NgModule"],"mappings":"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"}
