{"version":3,"file":"angular-medium-editor.umd.js","sources":["../../medium-editor.directive.ts","../../medium-editor.module.ts","../../angular-medium-editor.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport * as MediumEditor from 'medium-editor';\n\n/**\n * Medium Editor wrapper directive.\n *\n * Examples\n * <medium-editor\n      [(editorModel)]=\"textVar\"\n *    [editorOptions]=\"{'toolbar': {'buttons': ['bold', 'italic', 'underline', 'h1', 'h2', 'h3']}}\"\n *    [editorPlaceholder]=\"placeholderVar\"></medium-editor>\n */\n@Directive({\n  selector: 'medium-editor'\n})\nexport class MediumEditorDirective implements OnInit, OnChanges, OnDestroy {\n\n  private lastViewModel: string;\n  private element: HTMLElement;\n  private editor: any;\n  private active: boolean;\n\n\t@Input('editorModel') model: any;\n  @Input('editorOptions') options: any;\n  @Input('editorPlaceholder') placeholder: string;\n\n  @Output('editorModelChange') update = new EventEmitter();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    this.element = this.el.nativeElement;\n    this.element.innerHTML = '<div class=\"me-editable\">' + this.model + '</div>';\n    this.active = true;\n\n    if (this.placeholder && this.placeholder.length) {\n      this.options.placeholder = {\n        text : this.placeholder\n      };\n    }\n\n    // Global MediumEditor\n    this.editor = new MediumEditor('.me-editable', this.options);\n    this.editor.subscribe('editableInput', (event, editable) => {\n      this.updateModel();\n    });\n  }\n\n  refreshView() {\n    if (this.editor) {\n      this.editor.setContent(this.model);\n    }\n  }\n\n  ngOnChanges(changes): void {\n    if (this.isPropertyUpdated(changes, this.lastViewModel)) {\n      this.lastViewModel = this.model;\n      this.refreshView();\n    }\n  }\n\n  /**\n   * Emit updated model\n   */\n  updateModel(): void {\n    let value = this.editor.getContent();\n    value = value.replace(/&nbsp;/g, '')\n                 .replace(/<p><br><\\/p>/g, '')\n                 .trim();\n    this.lastViewModel = value;\n    this.update.emit(value);\n  }\n\n  /**\n   * Remove MediumEditor on destruction of directive\n   */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model')) { return false; }\n\n    const change = changes.model;\n\n    if (change.isFirstChange()) {\n      return true;\n    }\n    return !Object.is(viewModel, change.currentValue);\n  }\n}\n","// import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core'\n\nimport { MediumEditorDirective } from './medium-editor.directive';\n\n@NgModule({\n  imports: [ ],\n  exports: [\n    MediumEditorDirective\n  ],\n  declarations: [\n    MediumEditorDirective\n  ],\n})\nexport class MediumEditorModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["EventEmitter","MediumEditor","Directive","ElementRef","Input","Output","NgModule"],"mappings":"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"}