{
  "version": 3,
  "file": "angular2-medium-editor.umd.min.js",
  "sources": [
    "ng://angular2-medium-editor/out/medium-editor.directive.ts"
  ],
  "sourcesContent": [
    "import {\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    Renderer,\r\n    ɵlooseIdentical\r\n} from '@angular/core';\r\nimport * as MediumEditor from 'medium-editor';\r\n\r\n/**\r\n * Medium Editor wrapper directive.\r\n *\r\n * Examples\r\n * <medium-editor\r\n      [(editorModel)]=\"textVar\"\r\n *    [editorOptions]=\"{'toolbar': {'buttons': ['bold', 'italic', 'underline', 'h1', 'h2', 'h3']}}\"\r\n *    [editorPlaceholder]=\"placeholderVar\"></medium-editor>\r\n */\r\n@Directive({\r\n  selector: 'medium-editor'\r\n})\r\nexport class MediumEditorDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private lastViewModel: string;\r\n  private element: HTMLElement;\r\n  private editor: any;\r\n  private active: boolean;\r\n\r\n\t@Input('editorModel') model: any;\r\n  @Input('editorOptions') options: any;\r\n  @Input('editorPlaceholder') placeholder: string;\r\n\r\n  @Output('editorModelChange') update = new EventEmitter();\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n    this.element = this.el.nativeElement;\r\n    this.element.innerHTML = '<div class=\"me-editable\">' + this.model + '</div>';\r\n    this.active = true;\r\n\r\n    if (this.placeholder && this.placeholder.length) {\r\n      this.options.placeholder = {\r\n        text : this.placeholder\r\n      };\r\n    }\r\n\r\n    // Global MediumEditor\r\n    this.editor = new MediumEditor('.me-editable', this.options);\r\n    this.editor.subscribe('editableInput', (event, editable) => {\r\n      this.updateModel();\r\n    });\r\n  }\r\n\r\n  refreshView() {\r\n    if (this.editor) {\r\n      this.editor.setContent(this.model);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes): void {\r\n    if (this.isPropertyUpdated(changes, this.lastViewModel)) {\r\n      this.lastViewModel = this.model;\r\n      this.refreshView();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit updated model\r\n   */\r\n  updateModel(): void {\r\n    let value = this.editor.getContent();\r\n    value = value.replace(/&nbsp;/g, '')\r\n                 .replace(/<p><br><\\/p>/g, '')\r\n                 .trim();\r\n    this.lastViewModel = value;\r\n    this.update.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Remove MediumEditor on destruction of directive\r\n   */\r\n  ngOnDestroy(): void {\r\n    this.editor.destroy();\r\n  }\r\n\r\n  isPropertyUpdated(changes, viewModel) {\r\n    if (!changes.hasOwnProperty('model')) { return false; }\r\n\r\n    const change = changes.model;\r\n\r\n    if (change.isFirstChange()) {\r\n      return true;\r\n    }\r\n    return !ɵlooseIdentical(viewModel, change.currentValue);\r\n  }\r\n}\r\n"
  ],
  "names": [
    "MediumEditorDirective",
    "el",
    "this",
    "update",
    "EventEmitter",
    "prototype",
    "ngOnInit",
    "_this",
    "element",
    "nativeElement",
    "innerHTML",
    "model",
    "active",
    "placeholder",
    "length",
    "options",
    "text",
    "editor",
    "MediumEditor",
    "subscribe",
    "event",
    "editable",
    "updateModel",
    "refreshView",
    "setContent",
    "ngOnChanges",
    "changes",
    "isPropertyUpdated",
    "lastViewModel",
    "value",
    "getContent",
    "replace",
    "trim",
    "emit",
    "ngOnDestroy",
    "destroy",
    "viewModel",
    "hasOwnProperty",
    "change",
    "isFirstChange",
    "ɵlooseIdentical",
    "currentValue",
    "type",
    "Directive",
    "args",
    "selector",
    "ElementRef",
    "Input",
    "Output"
  ],
  "mappings": "oVA0BA,IAAAA,EAAA,WAaE,SAAFA,EAAsBC,GAAAC,KAAtBD,GAAsBA,EAFtBC,KAAAC,OAAwC,IAAIC,EAAAA,oBAI1CJ,EAAFK,UAAAC,SAAE,WAAA,IAAFC,EAAAL,KACIA,KAAKM,QAAUN,KAAKD,GAAGQ,cACvBP,KAAKM,QAAQE,UAAY,4BAA8BR,KAAKS,MAAQ,SACpET,KAAKU,QAAS,EAEVV,KAAKW,aAAeX,KAAKW,YAAYC,SACvCZ,KAAKa,QAAQF,YAAc,CACzBG,KAAOd,KAAKW,cAKhBX,KAAKe,OAAS,IAAIC,EAAa,eAAgBhB,KAAKa,SACpDb,KAAKe,OAAOE,UAAU,gBAAiB,SAACC,EAAOC,GAC7Cd,EAAKe,iBAITtB,EAAFK,UAAAkB,YAAE,WACMrB,KAAKe,QACPf,KAAKe,OAAOO,WAAWtB,KAAKS,QAIhCX,EAAFK,UAAAoB,YAAE,SAAYC,GACNxB,KAAKyB,kBAAkBD,EAASxB,KAAK0B,iBACvC1B,KAAK0B,cAAgB1B,KAAKS,MAC1BT,KAAKqB,gBAOTvB,EAAFK,UAAAiB,YAAE,WACE,IAAIO,EAAQ3B,KAAKe,OAAOa,aACxBD,EAAQA,EAAME,QAAQ,UAAW,IACnBA,QAAQ,gBAAiB,IACzBC,OACd9B,KAAK0B,cAAgBC,EACrB3B,KAAKC,OAAO8B,KAAKJ,IAMnB7B,EAAFK,UAAA6B,YAAE,WACEhC,KAAKe,OAAOkB,WAGdnC,EAAFK,UAAAsB,kBAAE,SAAkBD,EAASU,GACzB,IAAKV,EAAQW,eAAe,SAAY,OAAO,EAE/C,IAAMC,EAASZ,EAAQf,MAEvB,QAAI2B,EAAOC,kBAGHC,EAAAA,gBAAgBJ,EAAWE,EAAOG,iBAzE9C,iBAHA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,uDAtBZ,CAAAH,KAAII,EAAAA,gCA+BJnC,MAAA,CAAA,CAAA+B,KAAEK,EAAAA,MAAFH,KAAA,CAAQ,iBACR7B,QAAA,CAAA,CAAA2B,KAAGK,EAAAA,MAAHH,KAAA,CAAS,mBACT/B,YAAA,CAAA,CAAA6B,KAAGK,EAAAA,MAAHH,KAAA,CAAS,uBAETzC,OAAA,CAAA,CAAAuC,KAAGM,EAAAA,OAAHJ,KAAA,CAAU"
}
