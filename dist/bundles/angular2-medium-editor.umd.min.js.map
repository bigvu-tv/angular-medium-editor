{"version":3,"sources":["ng://angular2-medium-editor/medium-editor.directive.ts","ng://angular2-medium-editor/medium-editor.module.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport * as MediumEditor from 'medium-editor';\n\n/**\n * Medium Editor wrapper directive.\n *\n * Examples\n * <medium-editor\n      [(editorModel)]=\"textVar\"\n *    [editorOptions]=\"{'toolbar': {'buttons': ['bold', 'italic', 'underline', 'h1', 'h2', 'h3']}}\"\n *    [editorPlaceholder]=\"placeholderVar\"></medium-editor>\n */\n@Directive({\n  selector: 'medium-editor'\n})\nexport class MediumEditorDirective implements OnInit, OnChanges, OnDestroy {\n\n  private lastViewModel: string;\n  private element: HTMLElement;\n  private editor: any;\n  private active: boolean;\n\n\t@Input('editorModel') model: any;\n  @Input('editorOptions') options: any;\n  @Input('editorPlaceholder') placeholder: string;\n\n  @Output('editorModelChange') update = new EventEmitter();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    this.element = this.el.nativeElement;\n    this.element.innerHTML = '<div class=\"me-editable\">' + this.model + '</div>';\n    this.active = true;\n\n    if (this.placeholder && this.placeholder.length) {\n      this.options.placeholder = {\n        text : this.placeholder\n      };\n    }\n\n    // Global MediumEditor\n    this.editor = new MediumEditor('.me-editable', this.options);\n    this.editor.subscribe('editableInput', (event, editable) => {\n      this.updateModel();\n    });\n  }\n\n  refreshView() {\n    if (this.editor) {\n      this.editor.setContent(this.model);\n    }\n  }\n\n  ngOnChanges(changes): void {\n    if (this.isPropertyUpdated(changes, this.lastViewModel)) {\n      this.lastViewModel = this.model;\n      this.refreshView();\n    }\n  }\n\n  /**\n   * Emit updated model\n   */\n  updateModel(): void {\n    let value = this.editor.getContent();\n    value = value.replace(/&nbsp;/g, '')\n                 .replace(/<p><br><\\/p>/g, '')\n                 .trim();\n    this.lastViewModel = value;\n    this.update.emit(value);\n  }\n\n  /**\n   * Remove MediumEditor on destruction of directive\n   */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model')) { return false; }\n\n    const change = changes.model;\n\n    if (change.isFirstChange()) {\n      return true;\n    }\n    return !Object.is(viewModel, change.currentValue);\n  }\n}\n","// import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core'\n\nimport { MediumEditorDirective } from './medium-editor.directive';\n\n@NgModule({\n  imports: [ ],\n  exports: [\n    MediumEditorDirective\n  ],\n  declarations: [\n    MediumEditorDirective\n  ],\n})\nexport class MediumEditorModule { }"],"names":["MediumEditorDirective","prototype","ngOnInit","_this","this","element","el","nativeElement","innerHTML","model","active","placeholder","length","options","text","editor","MediumEditor","subscribe","event","editable","updateModel","refreshView","setContent","ngOnChanges","changes","isPropertyUpdated","lastViewModel","value","getContent","replace","trim","update","emit","ngOnDestroy","destroy","viewModel","hasOwnProperty","change","isFirstChange","Object","is","currentValue","Directive","args","selector","ElementRef","Input","Output","i0","ɵɵdirectiveInject","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","EventEmitter","NgModule","imports","exports","declarations","MediumEditorModule"],"mappings":"oVAwCEA,EAAAC,UAAAC,SAAA,WAAA,IAAAC,EAAAC,KACEA,KAAKC,QAAUD,KAAKE,GAAGC,cACvBH,KAAKC,QAAQG,UAAY,4BAA8BJ,KAAKK,MAAQ,SACpEL,KAAKM,QAAS,EAEVN,KAAKO,aAAeP,KAAKO,YAAYC,SACvCR,KAAKS,QAAQF,YAAc,CACzBG,KAAOV,KAAKO,cAKhBP,KAAKW,OAAS,IAAIC,EAAa,eAAgBZ,KAAKS,SACpDT,KAAKW,OAAOE,UAAU,gBAAe,SAAGC,EAAOC,GAC7ChB,EAAKiB,iBAITpB,EAAAC,UAAAoB,YAAA,WACMjB,KAAKW,QACPX,KAAKW,OAAOO,WAAWlB,KAAKK,QAIhCT,EAAAC,UAAAsB,YAAA,SAAYC,GACNpB,KAAKqB,kBAAkBD,EAASpB,KAAKsB,iBACvCtB,KAAKsB,cAAgBtB,KAAKK,MAC1BL,KAAKiB,gBAOTrB,EAAAC,UAAAmB,YAAA,W,IAEEO,GAAQA,EADIvB,KAAKW,OAAOa,cACVC,QAAQ,UAAW,IACnBA,QAAQ,gBAAiB,IACzBC,OACd1B,KAAKsB,cAAgBC,EACrBvB,KAAK2B,OAAOC,KAAKL,IAMnB3B,EAAAC,UAAAgC,YAAA,WACE7B,KAAKW,OAAOmB,WAGdlC,EAAAC,UAAAwB,kBAAA,SAAkBD,EAASW,GACzB,IAAKX,EAAQY,eAAe,SAAY,OAAO,EAEzCC,EAASb,EAAQf,MAEvB,QAAI4B,EAAOC,kBAGHC,OAAOC,GAAGL,EAAWE,EAAOI,e,oBA5EvCC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oB,yCArBRC,EAAAA,c,+BA8BFC,EAAAA,MAAKH,KAAA,CAAC,iB,eACLG,EAAAA,MAAKH,KAAA,CAAC,mB,mBACNG,EAAAA,MAAKH,KAAA,CAAC,uB,cAENI,EAAAA,OAAMJ,KAAA,CAAC,wB,iCAXG3C,GAAqBgD,EAAAC,kBAAAD,EAAAH,c,iCAArB7C,EAAqBkD,UAAA,CAAA,CAAA,kBAAAC,OAAA,CAAA1C,MAAA,CAAA,cAAA,SAAAI,QAAA,CAAA,gBAAA,WAAAF,YAAA,CAAA,oBAAA,gBAAAyC,QAAA,CAAArB,OAAA,qBAAAsB,SAAA,CAAAL,EAAAM,wBAHlC,IAAAtD,E,EAgBE,SAAAA,EAAoBM,GAAAF,KAAAE,GAAAA,EAFSF,KAAA2B,OAAS,IAAIwB,EAAAA,a,oBC/B3CC,EAAAA,SAAQb,KAAA,CAAC,CACRc,QAAS,GACTC,QAAS,CACP1D,GAEF2D,aAAc,CACZ3D,O,gCAGS4D,I,6DAAAA,IAAkBH,QAAA,CARpB,M,QADX,SAAAG,K,gEASaA,EAAkB,CAAAD,aAAA,CAH3B3D,GAAqB0D,QAAA,CAHrB1D,K"}