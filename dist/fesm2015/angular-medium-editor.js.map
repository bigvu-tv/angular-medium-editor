{"version":3,"file":"angular-medium-editor.js","sources":["../../medium-editor.directive.ts","../../medium-editor.module.ts","../../angular-medium-editor.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2\n} from '@angular/core';\nimport * as MediumEditor from 'medium-editor';\n\n/**\n * Medium Editor wrapper directive.\n *\n * Examples\n * <medium-editor\n      [(editorModel)]=\"textVar\"\n *    [editorOptions]=\"{'toolbar': {'buttons': ['bold', 'italic', 'underline', 'h1', 'h2', 'h3']}}\"\n *    [editorPlaceholder]=\"placeholderVar\"></medium-editor>\n */\n@Directive({\n  selector: 'medium-editor'\n})\nexport class MediumEditorDirective implements OnInit, OnChanges, OnDestroy {\n\n  private lastViewModel: string;\n  private element: HTMLElement;\n  private editor: any;\n  private active: boolean;\n\n\t@Input('editorModel') model: any;\n  @Input('editorOptions') options: any;\n  @Input('editorPlaceholder') placeholder: string;\n\n  @Output('editorModelChange') update = new EventEmitter();\n\n  constructor(private el: ElementRef) { }\n\n  ngOnInit() {\n    this.element = this.el.nativeElement;\n    this.element.innerHTML = '<div class=\"me-editable\">' + this.model + '</div>';\n    this.active = true;\n\n    if (this.placeholder && this.placeholder.length) {\n      this.options.placeholder = {\n        text : this.placeholder\n      };\n    }\n\n    // Global MediumEditor\n    this.editor = new MediumEditor('.me-editable', this.options);\n    this.editor.subscribe('editableInput', (event, editable) => {\n      this.updateModel();\n    });\n  }\n\n  refreshView() {\n    if (this.editor) {\n      this.editor.setContent(this.model);\n    }\n  }\n\n  ngOnChanges(changes): void {\n    if (this.isPropertyUpdated(changes, this.lastViewModel)) {\n      this.lastViewModel = this.model;\n      this.refreshView();\n    }\n  }\n\n  /**\n   * Emit updated model\n   */\n  updateModel(): void {\n    let value = this.editor.getContent();\n    value = value.replace(/&nbsp;/g, '')\n                 .replace(/<p><br><\\/p>/g, '')\n                 .trim();\n    this.lastViewModel = value;\n    this.update.emit(value);\n  }\n\n  /**\n   * Remove MediumEditor on destruction of directive\n   */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model')) { return false; }\n\n    const change = changes.model;\n\n    if (change.isFirstChange()) {\n      return true;\n    }\n    return !Object.is(viewModel, change.currentValue);\n  }\n}\n","// import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core'\n\nimport { MediumEditorDirective } from './medium-editor.directive';\n\n@NgModule({\n  imports: [ ],\n  exports: [\n    MediumEditorDirective\n  ],\n  declarations: [\n    MediumEditorDirective\n  ],\n})\nexport class MediumEditorModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}